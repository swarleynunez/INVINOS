// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// TraceabilityTraceabilityVector is an auto generated low-level Go binding around an user-defined struct.
type TraceabilityTraceabilityVector struct {
	Transitions   []TraceabilityTransition
	PrevProductID *big.Int
}

// TraceabilityTransition is an auto generated low-level Go binding around an user-defined struct.
type TraceabilityTransition struct {
	TypeID        *big.Int
	LostQuantity  *big.Int
	ProductTypeID string
	CompanyID     string
	ContainerID   string
	CreatedAt     *big.Int
	Info          string
}

// TraceabilityMetaData contains all meta data concerning the Traceability contract.
var TraceabilityMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"authContract\",\"outputs\":[{\"internalType\":\"contractAuth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entityInfoContract\",\"outputs\":[{\"internalType\":\"contractEntityInfo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_productID\",\"type\":\"uint256\"}],\"name\":\"getProductQuantity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_lotNumber\",\"type\":\"string\"}],\"name\":\"isLotNumberAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_productID\",\"type\":\"uint256\"}],\"name\":\"isProductAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"lotNumbers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_productTypeID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_companyID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_containerID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_info\",\"type\":\"string\"}],\"name\":\"productEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_productID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_lotNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_companyID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_containerID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_info\",\"type\":\"string\"}],\"name\":\"productOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_productID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_containerID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_info\",\"type\":\"string\"}],\"name\":\"productPartition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_productID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lostQuantity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_productTypeID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_containerID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_info\",\"type\":\"string\"}],\"name\":\"productProcessing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"products\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"typeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lostQuantity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"productTypeID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"companyID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"containerID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"internalType\":\"structTraceability.Transition[]\",\"name\":\"transitions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"prevProductID\",\"type\":\"uint256\"}],\"internalType\":\"structTraceability.TraceabilityVector\",\"name\":\"tv\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"partitioned\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b50600080546001600160a01b031916339081179091556040516200003590620000e7565b6001600160a01b039091168152602001604051809103906000f08015801562000062573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b039283161790556000546040519116906200009390620000f5565b6001600160a01b039091168152602001604051809103906000f080158015620000c0573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b039290921691909117905562000103565b61069b806200285f83390190565b610c098062002efa83390190565b61274c80620001136000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80637acc0b2011610081578063b62367c91161005b578063b62367c914610210578063d27733c514610230578063db34d1231461024357600080fd5b80637acc0b20146101885780638da5cb5b146101ab57806399708db4146101f057600080fd5b80635b39ccbf116100b25780635b39ccbf146101295780636807b8ff14610162578063776073e01461017557600080fd5b80631898979a146100d95780634fadbced146100ee57806355fe699914610116575b600080fd5b6100ec6100e73660046120ee565b610256565b005b6101016100fc3660046121a5565b6107d7565b60405190151581526020015b60405180910390f35b6100ec6101243660046120ee565b610834565b6101546101373660046121be565b805160208183018101805160048252928201919093012091525481565b60405190815260200161010d565b6100ec6101703660046121fb565b610d34565b6100ec610183366004612239565b6111aa565b61019b6101963660046121a5565b611bab565b60405161010d949392919061231e565b6000546101cb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010d565b6002546101cb9073ffffffffffffffffffffffffffffffffffffffff1681565b6001546101cb9073ffffffffffffffffffffffffffffffffffffffff1681565b61010161023e3660046121be565b611eaa565b6101546102513660046121a5565b611ed3565b60005473ffffffffffffffffffffffffffffffffffffffff163314610302576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201527f20746869732066756e6374696f6e00000000000000000000000000000000000060648201526084015b60405180910390fd5b61030b856107d7565b610371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f50726f64756374206973206e6f7420617661696c61626c65000000000000000060448201526064016102f9565b61037a84611eaa565b6103e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4c6f74206e756d626572206973206e6f7420617661696c61626c65000000000060448201526064016102f9565b6002546040517f857d386b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063857d386b9061043690869060040161244d565b602060405180830381865afa158015610453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104779190612460565b6104dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f436f6d70616e7920646f6573206e6f742065786973740000000000000000000060448201526064016102f9565b6002546040517fa14d489d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a14d489d9061053390859060040161244d565b602060405180830381865afa158015610550573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105749190612460565b6105da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f436f6e7461696e657220646f6573206e6f74206578697374000000000000000060448201526064016102f9565b6000858152600360208190526040918290200180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055518590600490610628908790612482565b9081526040805160209281900383019020929092556000878152600390915290812060019081015461065a91906124cd565b9050600061073160036000600360008b8152602001908152602001600020600101600001858154811061068f5761068f6124e0565b906000526020600020906007020160020180546106ab9061250f565b80601f01602080910402602001604051908101604052809291908181526020018280546106d79061250f565b80156107245780601f106106f957610100808354040283529160200191610724565b820191906000526020600020905b81548152906001019060200180831161070757829003601f168201915b5050505050888888611f68565b600088815260036020908152604080832060019081018054808301825590855293839020855160079095020193845591840151918301919091558201519192508291600282019061078290826125b1565b506060820151600382019061079790826125b1565b50608082015160048201906107ac90826125b1565b5060a0820151600582015560c082015160068201906107cb90826125b1565b50505050505050505050565b6000818152600360205260408120600101541580159061080a57506000828152600360208190526040909120015460ff16155b801561082e575060008281526003602081905260409091200154610100900460ff16155b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201527f20746869732066756e6374696f6e00000000000000000000000000000000000060648201526084016102f9565b60008511610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f5175616e74697479206f662030206e6f7420616c6c6f7765640000000000000060448201526064016102f9565b6002546040517f4c5231d400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690634c5231d49061099b90879060040161244d565b602060405180830381865afa1580156109b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dc9190612460565b610a42576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f50726f64756374207479706520646f6573206e6f74206578697374000000000060448201526064016102f9565b6002546040517f857d386b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063857d386b90610a9890869060040161244d565b602060405180830381865afa158015610ab5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad99190612460565b610b3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f436f6d70616e7920646f6573206e6f742065786973740000000000000000000060448201526064016102f9565b6002546040517fa14d489d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a14d489d90610b9590859060040161244d565b602060405180830381865afa158015610bb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd69190612460565b610c3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f436f6e7461696e657220646f6573206e6f74206578697374000000000000000060448201526064016102f9565b610c4a600580546001019055565b6000610c5b60008087878787611f68565b90508560036000610c6b60055490565b81526020019081526020016000206000018190555060036000610c8d60055490565b81526020808201929092526040908101600090812060019081018054808301825590835291849020855160079093020191825592840151928101929092558201518291906002820190610ce090826125b1565b5060608201516003820190610cf590826125b1565b5060808201516004820190610d0a90826125b1565b5060a0820151600582015560c08201516006820190610d2990826125b1565b505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ddb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201527f20746869732066756e6374696f6e00000000000000000000000000000000000060648201526084016102f9565b610de4856107d7565b610e4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f50726f64756374206973206e6f7420617661696c61626c65000000000000000060448201526064016102f9565b610e5385611ed3565b841115610ebc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4e6f7420656e6f7567682070726f6475637420617661696c61626c650000000060448201526064016102f9565b6002546040517f4c5231d400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690634c5231d490610f1290869060040161244d565b602060405180830381865afa158015610f2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f539190612460565b610fb9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f50726f64756374207479706520646f6573206e6f74206578697374000000000060448201526064016102f9565b6002546040517fa14d489d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a14d489d9061100f90859060040161244d565b602060405180830381865afa15801561102c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110509190612460565b6110b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f436f6e7461696e657220646f6573206e6f74206578697374000000000000000060448201526064016102f9565b60008581526003602052604081206001908101546110d491906124cd565b9050600061073160018787600360008c81526020019081526020016000206001016000018681548110611109576111096124e0565b906000526020600020906007020160030180546111259061250f565b80601f01602080910402602001604051908101604052809291908181526020018280546111519061250f565b801561119e5780601f106111735761010080835404028352916020019161119e565b820191906000526020600020905b81548152906001019060200180831161118157829003601f168201915b50505050508888611f68565b60005473ffffffffffffffffffffffffffffffffffffffff163314611251576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201527f20746869732066756e6374696f6e00000000000000000000000000000000000060648201526084016102f9565b61125a846107d7565b6112c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f50726f64756374206973206e6f7420617661696c61626c65000000000000000060448201526064016102f9565b6000831161132a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f5175616e74697479206f662030206e6f7420616c6c6f7765640000000000000060448201526064016102f9565b61133384611ed3565b831061139b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4e6f7420656e6f7567682070726f6475637420617661696c61626c650000000060448201526064016102f9565b6002546040517fa14d489d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063a14d489d906113f190859060040161244d565b602060405180830381865afa15801561140e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114329190612460565b611498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f436f6e7461696e657220646f6573206e6f74206578697374000000000000000060448201526064016102f9565b6000848152600360208190526040822090810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155908101546114e591906124cd565b905060006117f660026000600360008a8152602001908152602001600020600101600001858154811061151a5761151a6124e0565b906000526020600020906007020160020180546115369061250f565b80601f01602080910402602001604051908101604052809291908181526020018280546115629061250f565b80156115af5780601f10611584576101008083540402835291602001916115af565b820191906000526020600020905b81548152906001019060200180831161159257829003601f168201915b50505060008c8152600360205260409020600101805490925088915081106115d9576115d96124e0565b906000526020600020906007020160030180546115f59061250f565b80601f01602080910402602001604051908101604052809291908181526020018280546116219061250f565b801561166e5780601f106116435761010080835404028352916020019161166e565b820191906000526020600020905b81548152906001019060200180831161165157829003601f168201915b50505060008d815260036020526040902060010180549092508991508110611698576116986124e0565b906000526020600020906007020160040180546116b49061250f565b80601f01602080910402602001604051908101604052809291908181526020018280546116e09061250f565b801561172d5780601f106117025761010080835404028352916020019161172d565b820191906000526020600020905b81548152906001019060200180831161171057829003601f168201915b50505060008e815260036020526040902060010180549092508a91508110611757576117576124e0565b906000526020600020906007020160060180546117739061250f565b80601f016020809104026020016040519081016040528092919081815260200182805461179f9061250f565b80156117ec5780601f106117c1576101008083540402835291602001916117ec565b820191906000526020600020905b8154815290600101906020018083116117cf57829003601f168201915b5050505050611f68565b9050611806600580546001019055565b8461181087611ed3565b61181a91906124cd565b6003600061182760055490565b8152602001908152602001600020600001819055506003600061184960055490565b8152602080820192909252604090810160009081206001908101805480830182559083529184902085516007909302019182559284015192810192909255820151829190600282019061189c90826125b1565b50606082015160038201906118b190826125b1565b50608082015160048201906118c690826125b1565b5060a0820151600582015560c082015160068201906118e590826125b1565b50505085600360006118f660055490565b8152602001908152602001600020600101600101819055506000611aa160026000600360008b81526020019081526020016000206001016000018681548110611941576119416124e0565b9060005260206000209060070201600201805461195d9061250f565b80601f01602080910402602001604051908101604052809291908181526020018280546119899061250f565b80156119d65780601f106119ab576101008083540402835291602001916119d6565b820191906000526020600020905b8154815290600101906020018083116119b957829003601f168201915b50505060008d815260036020526040902060010180549092508991508110611a0057611a006124e0565b90600052602060002090600702016003018054611a1c9061250f565b80601f0160208091040260200160405190810160405280929190818152602001828054611a489061250f565b8015611a955780601f10611a6a57610100808354040283529160200191611a95565b820191906000526020600020905b815481529060010190602001808311611a7857829003601f168201915b50505050508989611f68565b9050611ab1600580546001019055565b8560036000611abf60055490565b81526020019081526020016000206000018190555060036000611ae160055490565b81526020808201929092526040908101600090812060019081018054808301825590835291849020855160079093020191825592840151928101929092558201518291906002820190611b3490826125b1565b5060608201516003820190611b4990826125b1565b5060808201516004820190611b5e90826125b1565b5060a0820151600582015560c08201516006820190611b7d90826125b1565b5050508660036000611b8e60055490565b815260208101919091526040016000206002015550505050505050565b600360209081526000918252604080832080548251600183018054606096810283018701865294820185815292969395919490938593928592919085015b82821015611e8157838290600052602060002090600702016040518060e00160405290816000820154815260200160018201548152602001600282018054611c309061250f565b80601f0160208091040260200160405190810160405280929190818152602001828054611c5c9061250f565b8015611ca95780601f10611c7e57610100808354040283529160200191611ca9565b820191906000526020600020905b815481529060010190602001808311611c8c57829003601f168201915b50505050508152602001600382018054611cc29061250f565b80601f0160208091040260200160405190810160405280929190818152602001828054611cee9061250f565b8015611d3b5780601f10611d1057610100808354040283529160200191611d3b565b820191906000526020600020905b815481529060010190602001808311611d1e57829003601f168201915b50505050508152602001600482018054611d549061250f565b80601f0160208091040260200160405190810160405280929190818152602001828054611d809061250f565b8015611dcd5780601f10611da257610100808354040283529160200191611dcd565b820191906000526020600020905b815481529060010190602001808311611db057829003601f168201915b5050505050815260200160058201548152602001600682018054611df09061250f565b80601f0160208091040260200160405190810160405280929190818152602001828054611e1c9061250f565b8015611e695780601f10611e3e57610100808354040283529160200191611e69565b820191906000526020600020905b815481529060010190602001808311611e4c57829003601f168201915b50505050508152505081526020019060010190611be9565b505050908252506001919091015460209091015260039091015460ff8082169161010090041684565b6000600482604051611ebc9190612482565b908152604051908190036020019020541592915050565b60008060005b600084815260036020526040902060010154811015611f46576000848152600360205260409020600101805482908110611f1557611f156124e0565b90600052602060002090600702016001015482611f3291906126cb565b915080611f3e816126de565b915050611ed9565b50600083815260036020526040902054611f619082906124cd565b9392505050565b611fa86040518060e00160405280600081526020016000815260200160608152602001606081526020016060815260200160008152602001606081525090565b611fe86040518060e00160405280600081526020016000815260200160608152602001606081526020016060815260200160008152602001606081525090565b9687525060208601949094526040850192909252606084015260808301524260a083015260c082015290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261205457600080fd5b813567ffffffffffffffff8082111561206f5761206f612014565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156120b5576120b5612014565b816040528381528660208588010111156120ce57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561210657600080fd5b85359450602086013567ffffffffffffffff8082111561212557600080fd5b61213189838a01612043565b9550604088013591508082111561214757600080fd5b61215389838a01612043565b9450606088013591508082111561216957600080fd5b61217589838a01612043565b9350608088013591508082111561218b57600080fd5b5061219888828901612043565b9150509295509295909350565b6000602082840312156121b757600080fd5b5035919050565b6000602082840312156121d057600080fd5b813567ffffffffffffffff8111156121e757600080fd5b6121f384828501612043565b949350505050565b600080600080600060a0868803121561221357600080fd5b8535945060208601359350604086013567ffffffffffffffff8082111561214757600080fd5b6000806000806080858703121561224f57600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561227557600080fd5b61228188838901612043565b9350606087013591508082111561229757600080fd5b506122a487828801612043565b91505092959194509250565b60005b838110156122cb5781810151838201526020016122b3565b50506000910152565b600081518084526122ec8160208601602086016122b0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600060808683526020818185015260c080850188516040808689015282825180855260e09450848a019150848160051b8b0101878501945060005b82811015612415577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff208c8303018452855180518352898101518a8401528581015188878501526123ab898501826122d4565b9050606080830151858303828701526123c483826122d4565b925050508b8201518482038d8601526123dd82826122d4565b60a08481015190870152928b01518584038c870152929150612401905081836122d4565b978b0197958b019593505050600101612359565b50878e015160a08c01528c1515848c01529850612430915050565b505050505050612444606083018415159052565b95945050505050565b602081526000611f6160208301846122d4565b60006020828403121561247257600080fd5b81518015158114611f6157600080fd5b600082516124948184602087016122b0565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561082e5761082e61249e565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061252357607f821691505b60208210810361255c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156125ac57600081815260208120601f850160051c810160208610156125895750805b601f850160051c820191505b818110156125a857828155600101612595565b5050505b505050565b815167ffffffffffffffff8111156125cb576125cb612014565b6125df816125d9845461250f565b84612562565b602080601f83116001811461263257600084156125fc5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b1785556125a8565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561267f57888601518255948401946001909101908401612660565b50858210156126bb57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561082e5761082e61249e565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361270f5761270f61249e565b506001019056fea26469706673582212207a5856268f64bdda3dff59821ccf7d36bf8a1208ed6a65946c7a224166ab28d064736f6c63430008150033608060405234801561001057600080fd5b5060405161069b38038061069b83398101604081905261002f91610296565b600080546001600160a01b0319166001600160a01b03831617815560408051808201909152600d81526c50524f445543545f454e54525960981b60208083019190915291805260019091527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49906100a69082610365565b507fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4a805460ff1916600190811790915560408051808201909152601281527150524f445543545f50524f43455353494e4760701b6020828101919091526000839052919091527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f906101389082610365565b507fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b6887930805460ff19166001908117909155604080518082019091526011815270282927a22aa1aa2fa820a92a24aa24a7a760791b6020828101919091526002600052919091527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f906101c99082610365565b507fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec3310805460ff1916600190811790915560408051808201909152600e81526d141493d11550d517d3d55514155560921b6020828101919091526003600052919091527f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b906102579082610365565b50506003600052600160208190527f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60c805460ff19169091179055610424565b6000602082840312156102a857600080fd5b81516001600160a01b03811681146102bf57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806102f057607f821691505b60208210810361031057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561036057600081815260208120601f850160051c8101602086101561033d5750805b601f850160051c820191505b8181101561035c57828155600101610349565b5050505b505050565b81516001600160401b0381111561037e5761037e6102c6565b6103928161038c84546102dc565b84610316565b602080601f8311600181146103c757600084156103af5750858301515b600019600386901b1c1916600185901b17855561035c565b600085815260208120601f198616915b828110156103f6578886015182559484019460019091019084016103d7565b50858210156104145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610268806104336000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637f81cbe91461003b5780638da5cb5b14610065575b600080fd5b61004e610049366004610151565b6100aa565b60405161005c92919061016a565b60405180910390f35b6000546100859073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161005c565b6001602052600090815260409020805481906100c5906101df565b80601f01602080910402602001604051908101604052809291908181526020018280546100f1906101df565b801561013e5780601f106101135761010080835404028352916020019161013e565b820191906000526020600020905b81548152906001019060200180831161012157829003601f168201915b5050506001909301549192505060ff1682565b60006020828403121561016357600080fd5b5035919050565b604081526000835180604084015260005b81811015610198576020818701810151606086840101520161017b565b5060006060828501015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505082151560208301529392505050565b600181811c908216806101f357607f821691505b60208210810361022c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220561e1b99d61262ea5b8f2aea56157a2fa264bf7e4c06fa2dadfc09de6677ae6d64736f6c63430008150033608060405234801561001057600080fd5b50604051610c09380380610c0983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610b76806100936000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638da5cb5b11610076578063a14d489d1161005b578063a14d489d1461019f578063a844babb146101b2578063f14513f2146101c557600080fd5b80638da5cb5b146101475780638e01a4b21461018c57600080fd5b80637a3d0277116100a75780637a3d02771461010c5780638534d3011461011f578063857d386b1461013457600080fd5b80634c5231d4146100c3578063763852e9146100eb575b600080fd5b6100d66100d136600461084a565b6101d8565b60405190151581526020015b60405180910390f35b6100fe6100f936600461084a565b610206565b6040516100e29291906108ab565b6100fe61011a36600461084a565b6102b8565b61013261012d366004610904565b6102de565b005b6100d661014236600461084a565b61047c565b6000546101679073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e2565b61013261019a366004610904565b61048e565b6100d66101ad36600461084a565b6105e3565b6100fe6101c036600461084a565b6105f5565b6101326101d3366004610904565b61061b565b60006001826040516101ea9190610968565b9081526040519081900360200190206001015460ff1692915050565b805160208183018101805160038252928201919093012091528054819061022c90610984565b80601f016020809104026020016040519081016040528092919081815260200182805461025890610984565b80156102a55780601f1061027a576101008083540402835291602001916102a5565b820191906000526020600020905b81548152906001019060200180831161028857829003601f168201915b5050506001909301549192505060ff1682565b805160208183018101805160028252928201919093012091528054819061022c90610984565b60005473ffffffffffffffffffffffffffffffffffffffff16331461038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201527f20746869732066756e6374696f6e00000000000000000000000000000000000060648201526084015b60405180910390fd5b610393826101d8565b156103fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f50726f64756374207479706520616c72656164792063726561746564000000006044820152606401610381565b8060018360405161040b9190610968565b908152604051908190036020019020906104259082610a26565b50600180836040516104379190610968565b90815260405190819003602001902060010180549115157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009092169190911790555050565b60006002826040516101ea9190610968565b60005473ffffffffffffffffffffffffffffffffffffffff163314610535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201527f20746869732066756e6374696f6e0000000000000000000000000000000000006064820152608401610381565b61053e826105e3565b156105a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f436f6e7461696e657220616c72656164792063726561746564000000000000006044820152606401610381565b806003836040516105b69190610968565b908152604051908190036020019020906105d09082610a26565b5060016003836040516104379190610968565b60006003826040516101ea9190610968565b805160208183018101805160018252928201919093012091528054819061022c90610984565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201527f20746869732066756e6374696f6e0000000000000000000000000000000000006064820152608401610381565b6106cb8261047c565b15610732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f436f6d70616e7920616c726561647920637265617465640000000000000000006044820152606401610381565b806002836040516107439190610968565b9081526040519081900360200190209061075d9082610a26565b5060016002836040516104379190610968565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126107b057600080fd5b813567ffffffffffffffff808211156107cb576107cb610770565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561081157610811610770565b8160405283815286602085880101111561082a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561085c57600080fd5b813567ffffffffffffffff81111561087357600080fd5b61087f8482850161079f565b949350505050565b60005b838110156108a257818101518382015260200161088a565b50506000910152565b60408152600083518060408401526108ca816060850160208801610887565b921515602083015250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b6000806040838503121561091757600080fd5b823567ffffffffffffffff8082111561092f57600080fd5b61093b8683870161079f565b9350602085013591508082111561095157600080fd5b5061095e8582860161079f565b9150509250929050565b6000825161097a818460208701610887565b9190910192915050565b600181811c9082168061099857607f821691505b6020821081036109d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115610a2157600081815260208120601f850160051c810160208610156109fe5750805b601f850160051c820191505b81811015610a1d57828155600101610a0a565b5050505b505050565b815167ffffffffffffffff811115610a4057610a40610770565b610a5481610a4e8454610984565b846109d7565b602080601f831160018114610aa75760008415610a715750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610a1d565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015610af457888601518255948401946001909101908401610ad5565b5085821015610b3057878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212200503eab396577f46b1f6cf18e54b3315ae782c88ea84d36809706709060404f664736f6c63430008150033",
}

// TraceabilityABI is the input ABI used to generate the binding from.
// Deprecated: Use TraceabilityMetaData.ABI instead.
var TraceabilityABI = TraceabilityMetaData.ABI

// TraceabilityBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use TraceabilityMetaData.Bin instead.
var TraceabilityBin = TraceabilityMetaData.Bin

// DeployTraceability deploys a new Ethereum contract, binding an instance of Traceability to it.
func DeployTraceability(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Traceability, error) {
	parsed, err := TraceabilityMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(TraceabilityBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Traceability{TraceabilityCaller: TraceabilityCaller{contract: contract}, TraceabilityTransactor: TraceabilityTransactor{contract: contract}, TraceabilityFilterer: TraceabilityFilterer{contract: contract}}, nil
}

// Traceability is an auto generated Go binding around an Ethereum contract.
type Traceability struct {
	TraceabilityCaller     // Read-only binding to the contract
	TraceabilityTransactor // Write-only binding to the contract
	TraceabilityFilterer   // Log filterer for contract events
}

// TraceabilityCaller is an auto generated read-only Go binding around an Ethereum contract.
type TraceabilityCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TraceabilityTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TraceabilityTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TraceabilityFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TraceabilityFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TraceabilitySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TraceabilitySession struct {
	Contract     *Traceability     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TraceabilityCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TraceabilityCallerSession struct {
	Contract *TraceabilityCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// TraceabilityTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TraceabilityTransactorSession struct {
	Contract     *TraceabilityTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// TraceabilityRaw is an auto generated low-level Go binding around an Ethereum contract.
type TraceabilityRaw struct {
	Contract *Traceability // Generic contract binding to access the raw methods on
}

// TraceabilityCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TraceabilityCallerRaw struct {
	Contract *TraceabilityCaller // Generic read-only contract binding to access the raw methods on
}

// TraceabilityTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TraceabilityTransactorRaw struct {
	Contract *TraceabilityTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTraceability creates a new instance of Traceability, bound to a specific deployed contract.
func NewTraceability(address common.Address, backend bind.ContractBackend) (*Traceability, error) {
	contract, err := bindTraceability(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Traceability{TraceabilityCaller: TraceabilityCaller{contract: contract}, TraceabilityTransactor: TraceabilityTransactor{contract: contract}, TraceabilityFilterer: TraceabilityFilterer{contract: contract}}, nil
}

// NewTraceabilityCaller creates a new read-only instance of Traceability, bound to a specific deployed contract.
func NewTraceabilityCaller(address common.Address, caller bind.ContractCaller) (*TraceabilityCaller, error) {
	contract, err := bindTraceability(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TraceabilityCaller{contract: contract}, nil
}

// NewTraceabilityTransactor creates a new write-only instance of Traceability, bound to a specific deployed contract.
func NewTraceabilityTransactor(address common.Address, transactor bind.ContractTransactor) (*TraceabilityTransactor, error) {
	contract, err := bindTraceability(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TraceabilityTransactor{contract: contract}, nil
}

// NewTraceabilityFilterer creates a new log filterer instance of Traceability, bound to a specific deployed contract.
func NewTraceabilityFilterer(address common.Address, filterer bind.ContractFilterer) (*TraceabilityFilterer, error) {
	contract, err := bindTraceability(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TraceabilityFilterer{contract: contract}, nil
}

// bindTraceability binds a generic wrapper to an already deployed contract.
func bindTraceability(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := TraceabilityMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Traceability *TraceabilityRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Traceability.Contract.TraceabilityCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Traceability *TraceabilityRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Traceability.Contract.TraceabilityTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Traceability *TraceabilityRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Traceability.Contract.TraceabilityTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Traceability *TraceabilityCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Traceability.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Traceability *TraceabilityTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Traceability.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Traceability *TraceabilityTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Traceability.Contract.contract.Transact(opts, method, params...)
}

// AuthContract is a free data retrieval call binding the contract method 0xb62367c9.
//
// Solidity: function authContract() view returns(address)
func (_Traceability *TraceabilityCaller) AuthContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Traceability.contract.Call(opts, &out, "authContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AuthContract is a free data retrieval call binding the contract method 0xb62367c9.
//
// Solidity: function authContract() view returns(address)
func (_Traceability *TraceabilitySession) AuthContract() (common.Address, error) {
	return _Traceability.Contract.AuthContract(&_Traceability.CallOpts)
}

// AuthContract is a free data retrieval call binding the contract method 0xb62367c9.
//
// Solidity: function authContract() view returns(address)
func (_Traceability *TraceabilityCallerSession) AuthContract() (common.Address, error) {
	return _Traceability.Contract.AuthContract(&_Traceability.CallOpts)
}

// EntityInfoContract is a free data retrieval call binding the contract method 0x99708db4.
//
// Solidity: function entityInfoContract() view returns(address)
func (_Traceability *TraceabilityCaller) EntityInfoContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Traceability.contract.Call(opts, &out, "entityInfoContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// EntityInfoContract is a free data retrieval call binding the contract method 0x99708db4.
//
// Solidity: function entityInfoContract() view returns(address)
func (_Traceability *TraceabilitySession) EntityInfoContract() (common.Address, error) {
	return _Traceability.Contract.EntityInfoContract(&_Traceability.CallOpts)
}

// EntityInfoContract is a free data retrieval call binding the contract method 0x99708db4.
//
// Solidity: function entityInfoContract() view returns(address)
func (_Traceability *TraceabilityCallerSession) EntityInfoContract() (common.Address, error) {
	return _Traceability.Contract.EntityInfoContract(&_Traceability.CallOpts)
}

// GetProductQuantity is a free data retrieval call binding the contract method 0xdb34d123.
//
// Solidity: function getProductQuantity(uint256 _productID) view returns(uint256)
func (_Traceability *TraceabilityCaller) GetProductQuantity(opts *bind.CallOpts, _productID *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Traceability.contract.Call(opts, &out, "getProductQuantity", _productID)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetProductQuantity is a free data retrieval call binding the contract method 0xdb34d123.
//
// Solidity: function getProductQuantity(uint256 _productID) view returns(uint256)
func (_Traceability *TraceabilitySession) GetProductQuantity(_productID *big.Int) (*big.Int, error) {
	return _Traceability.Contract.GetProductQuantity(&_Traceability.CallOpts, _productID)
}

// GetProductQuantity is a free data retrieval call binding the contract method 0xdb34d123.
//
// Solidity: function getProductQuantity(uint256 _productID) view returns(uint256)
func (_Traceability *TraceabilityCallerSession) GetProductQuantity(_productID *big.Int) (*big.Int, error) {
	return _Traceability.Contract.GetProductQuantity(&_Traceability.CallOpts, _productID)
}

// IsLotNumberAvailable is a free data retrieval call binding the contract method 0xd27733c5.
//
// Solidity: function isLotNumberAvailable(string _lotNumber) view returns(bool)
func (_Traceability *TraceabilityCaller) IsLotNumberAvailable(opts *bind.CallOpts, _lotNumber string) (bool, error) {
	var out []interface{}
	err := _Traceability.contract.Call(opts, &out, "isLotNumberAvailable", _lotNumber)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsLotNumberAvailable is a free data retrieval call binding the contract method 0xd27733c5.
//
// Solidity: function isLotNumberAvailable(string _lotNumber) view returns(bool)
func (_Traceability *TraceabilitySession) IsLotNumberAvailable(_lotNumber string) (bool, error) {
	return _Traceability.Contract.IsLotNumberAvailable(&_Traceability.CallOpts, _lotNumber)
}

// IsLotNumberAvailable is a free data retrieval call binding the contract method 0xd27733c5.
//
// Solidity: function isLotNumberAvailable(string _lotNumber) view returns(bool)
func (_Traceability *TraceabilityCallerSession) IsLotNumberAvailable(_lotNumber string) (bool, error) {
	return _Traceability.Contract.IsLotNumberAvailable(&_Traceability.CallOpts, _lotNumber)
}

// IsProductAvailable is a free data retrieval call binding the contract method 0x4fadbced.
//
// Solidity: function isProductAvailable(uint256 _productID) view returns(bool)
func (_Traceability *TraceabilityCaller) IsProductAvailable(opts *bind.CallOpts, _productID *big.Int) (bool, error) {
	var out []interface{}
	err := _Traceability.contract.Call(opts, &out, "isProductAvailable", _productID)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsProductAvailable is a free data retrieval call binding the contract method 0x4fadbced.
//
// Solidity: function isProductAvailable(uint256 _productID) view returns(bool)
func (_Traceability *TraceabilitySession) IsProductAvailable(_productID *big.Int) (bool, error) {
	return _Traceability.Contract.IsProductAvailable(&_Traceability.CallOpts, _productID)
}

// IsProductAvailable is a free data retrieval call binding the contract method 0x4fadbced.
//
// Solidity: function isProductAvailable(uint256 _productID) view returns(bool)
func (_Traceability *TraceabilityCallerSession) IsProductAvailable(_productID *big.Int) (bool, error) {
	return _Traceability.Contract.IsProductAvailable(&_Traceability.CallOpts, _productID)
}

// LotNumbers is a free data retrieval call binding the contract method 0x5b39ccbf.
//
// Solidity: function lotNumbers(string ) view returns(uint256)
func (_Traceability *TraceabilityCaller) LotNumbers(opts *bind.CallOpts, arg0 string) (*big.Int, error) {
	var out []interface{}
	err := _Traceability.contract.Call(opts, &out, "lotNumbers", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LotNumbers is a free data retrieval call binding the contract method 0x5b39ccbf.
//
// Solidity: function lotNumbers(string ) view returns(uint256)
func (_Traceability *TraceabilitySession) LotNumbers(arg0 string) (*big.Int, error) {
	return _Traceability.Contract.LotNumbers(&_Traceability.CallOpts, arg0)
}

// LotNumbers is a free data retrieval call binding the contract method 0x5b39ccbf.
//
// Solidity: function lotNumbers(string ) view returns(uint256)
func (_Traceability *TraceabilityCallerSession) LotNumbers(arg0 string) (*big.Int, error) {
	return _Traceability.Contract.LotNumbers(&_Traceability.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Traceability *TraceabilityCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Traceability.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Traceability *TraceabilitySession) Owner() (common.Address, error) {
	return _Traceability.Contract.Owner(&_Traceability.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Traceability *TraceabilityCallerSession) Owner() (common.Address, error) {
	return _Traceability.Contract.Owner(&_Traceability.CallOpts)
}

// Products is a free data retrieval call binding the contract method 0x7acc0b20.
//
// Solidity: function products(uint256 ) view returns(uint256 quantity, ((uint256,uint256,string,string,string,uint256,string)[],uint256) tv, bool partitioned, bool completed)
func (_Traceability *TraceabilityCaller) Products(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Quantity    *big.Int
	Tv          TraceabilityTraceabilityVector
	Partitioned bool
	Completed   bool
}, error) {
	var out []interface{}
	err := _Traceability.contract.Call(opts, &out, "products", arg0)

	outstruct := new(struct {
		Quantity    *big.Int
		Tv          TraceabilityTraceabilityVector
		Partitioned bool
		Completed   bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Quantity = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Tv = *abi.ConvertType(out[1], new(TraceabilityTraceabilityVector)).(*TraceabilityTraceabilityVector)
	outstruct.Partitioned = *abi.ConvertType(out[2], new(bool)).(*bool)
	outstruct.Completed = *abi.ConvertType(out[3], new(bool)).(*bool)

	return *outstruct, err

}

// Products is a free data retrieval call binding the contract method 0x7acc0b20.
//
// Solidity: function products(uint256 ) view returns(uint256 quantity, ((uint256,uint256,string,string,string,uint256,string)[],uint256) tv, bool partitioned, bool completed)
func (_Traceability *TraceabilitySession) Products(arg0 *big.Int) (struct {
	Quantity    *big.Int
	Tv          TraceabilityTraceabilityVector
	Partitioned bool
	Completed   bool
}, error) {
	return _Traceability.Contract.Products(&_Traceability.CallOpts, arg0)
}

// Products is a free data retrieval call binding the contract method 0x7acc0b20.
//
// Solidity: function products(uint256 ) view returns(uint256 quantity, ((uint256,uint256,string,string,string,uint256,string)[],uint256) tv, bool partitioned, bool completed)
func (_Traceability *TraceabilityCallerSession) Products(arg0 *big.Int) (struct {
	Quantity    *big.Int
	Tv          TraceabilityTraceabilityVector
	Partitioned bool
	Completed   bool
}, error) {
	return _Traceability.Contract.Products(&_Traceability.CallOpts, arg0)
}

// ProductEntry is a paid mutator transaction binding the contract method 0x55fe6999.
//
// Solidity: function productEntry(uint256 _quantity, string _productTypeID, string _companyID, string _containerID, string _info) returns()
func (_Traceability *TraceabilityTransactor) ProductEntry(opts *bind.TransactOpts, _quantity *big.Int, _productTypeID string, _companyID string, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.contract.Transact(opts, "productEntry", _quantity, _productTypeID, _companyID, _containerID, _info)
}

// ProductEntry is a paid mutator transaction binding the contract method 0x55fe6999.
//
// Solidity: function productEntry(uint256 _quantity, string _productTypeID, string _companyID, string _containerID, string _info) returns()
func (_Traceability *TraceabilitySession) ProductEntry(_quantity *big.Int, _productTypeID string, _companyID string, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.Contract.ProductEntry(&_Traceability.TransactOpts, _quantity, _productTypeID, _companyID, _containerID, _info)
}

// ProductEntry is a paid mutator transaction binding the contract method 0x55fe6999.
//
// Solidity: function productEntry(uint256 _quantity, string _productTypeID, string _companyID, string _containerID, string _info) returns()
func (_Traceability *TraceabilityTransactorSession) ProductEntry(_quantity *big.Int, _productTypeID string, _companyID string, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.Contract.ProductEntry(&_Traceability.TransactOpts, _quantity, _productTypeID, _companyID, _containerID, _info)
}

// ProductOutput is a paid mutator transaction binding the contract method 0x1898979a.
//
// Solidity: function productOutput(uint256 _productID, string _lotNumber, string _companyID, string _containerID, string _info) returns()
func (_Traceability *TraceabilityTransactor) ProductOutput(opts *bind.TransactOpts, _productID *big.Int, _lotNumber string, _companyID string, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.contract.Transact(opts, "productOutput", _productID, _lotNumber, _companyID, _containerID, _info)
}

// ProductOutput is a paid mutator transaction binding the contract method 0x1898979a.
//
// Solidity: function productOutput(uint256 _productID, string _lotNumber, string _companyID, string _containerID, string _info) returns()
func (_Traceability *TraceabilitySession) ProductOutput(_productID *big.Int, _lotNumber string, _companyID string, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.Contract.ProductOutput(&_Traceability.TransactOpts, _productID, _lotNumber, _companyID, _containerID, _info)
}

// ProductOutput is a paid mutator transaction binding the contract method 0x1898979a.
//
// Solidity: function productOutput(uint256 _productID, string _lotNumber, string _companyID, string _containerID, string _info) returns()
func (_Traceability *TraceabilityTransactorSession) ProductOutput(_productID *big.Int, _lotNumber string, _companyID string, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.Contract.ProductOutput(&_Traceability.TransactOpts, _productID, _lotNumber, _companyID, _containerID, _info)
}

// ProductPartition is a paid mutator transaction binding the contract method 0x776073e0.
//
// Solidity: function productPartition(uint256 _productID, uint256 _quantity, string _containerID, string _info) returns()
func (_Traceability *TraceabilityTransactor) ProductPartition(opts *bind.TransactOpts, _productID *big.Int, _quantity *big.Int, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.contract.Transact(opts, "productPartition", _productID, _quantity, _containerID, _info)
}

// ProductPartition is a paid mutator transaction binding the contract method 0x776073e0.
//
// Solidity: function productPartition(uint256 _productID, uint256 _quantity, string _containerID, string _info) returns()
func (_Traceability *TraceabilitySession) ProductPartition(_productID *big.Int, _quantity *big.Int, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.Contract.ProductPartition(&_Traceability.TransactOpts, _productID, _quantity, _containerID, _info)
}

// ProductPartition is a paid mutator transaction binding the contract method 0x776073e0.
//
// Solidity: function productPartition(uint256 _productID, uint256 _quantity, string _containerID, string _info) returns()
func (_Traceability *TraceabilityTransactorSession) ProductPartition(_productID *big.Int, _quantity *big.Int, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.Contract.ProductPartition(&_Traceability.TransactOpts, _productID, _quantity, _containerID, _info)
}

// ProductProcessing is a paid mutator transaction binding the contract method 0x6807b8ff.
//
// Solidity: function productProcessing(uint256 _productID, uint256 _lostQuantity, string _productTypeID, string _containerID, string _info) returns()
func (_Traceability *TraceabilityTransactor) ProductProcessing(opts *bind.TransactOpts, _productID *big.Int, _lostQuantity *big.Int, _productTypeID string, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.contract.Transact(opts, "productProcessing", _productID, _lostQuantity, _productTypeID, _containerID, _info)
}

// ProductProcessing is a paid mutator transaction binding the contract method 0x6807b8ff.
//
// Solidity: function productProcessing(uint256 _productID, uint256 _lostQuantity, string _productTypeID, string _containerID, string _info) returns()
func (_Traceability *TraceabilitySession) ProductProcessing(_productID *big.Int, _lostQuantity *big.Int, _productTypeID string, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.Contract.ProductProcessing(&_Traceability.TransactOpts, _productID, _lostQuantity, _productTypeID, _containerID, _info)
}

// ProductProcessing is a paid mutator transaction binding the contract method 0x6807b8ff.
//
// Solidity: function productProcessing(uint256 _productID, uint256 _lostQuantity, string _productTypeID, string _containerID, string _info) returns()
func (_Traceability *TraceabilityTransactorSession) ProductProcessing(_productID *big.Int, _lostQuantity *big.Int, _productTypeID string, _containerID string, _info string) (*types.Transaction, error) {
	return _Traceability.Contract.ProductProcessing(&_Traceability.TransactOpts, _productID, _lostQuantity, _productTypeID, _containerID, _info)
}
